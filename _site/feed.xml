<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="http://jekyllrb.com" version="3.4.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2017-03-18T03:36:11-05:00</updated><id>http://localhost:4000/</id><title type="html">Idiologos</title><subtitle>Musings about language, computation, and the intersection of the two.
</subtitle><entry><title type="html">Open for Comments</title><link href="http://localhost:4000/2017/03/17/open-for-comments.html" rel="alternate" type="text/html" title="Open for Comments" /><published>2017-03-17T17:59:00-05:00</published><updated>2017-03-17T17:59:00-05:00</updated><id>http://localhost:4000/2017/03/17/open-for-comments</id><content type="html" xml:base="http://localhost:4000/2017/03/17/open-for-comments.html">&lt;p&gt;Just a quick note before I get started: It was still March 14 in my time zone when I wrote my previous post, when I generated the static pages using Jekyll, and when I pushed the changes to GitHub, but it seems Netlify’s infrastructure has its own idea of what time it is.&lt;/p&gt;

&lt;p&gt;I have given some consideration to the comments problem and come to a decision. The options I’ve given consideration to include Disqus, Muut, HTML Comment Box, Remarkbox, GoTell, Isso, Pelican Comments, and Staticman.&lt;/p&gt;

&lt;h2 id=&quot;disqus&quot;&gt;Disqus&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://disqus.com/&quot;&gt;Disqus&lt;/a&gt; is the obvious choice. It’s common and free to use. However, I don’t like the idea of requiring people to sign in to post a comment, or worse: assuming that anyone who wants to post a comment should already have a Disqus account. I might as well assume everyone who visits this site is using a particular operating system or web browser. Also, the Disqus business model is based on ad revenue. I don’t begrudge them that, but I’d rather not clutter up my site with ads.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pros:&lt;/strong&gt; Nobody ever got fired for incorporating Disqus in their site.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cons:&lt;/strong&gt; Requires login. Privacy issues. Ads. Comments controlled by a third party.&lt;/p&gt;

&lt;p&gt;I have also given some consideration to other similar services, such as &lt;a href=&quot;https://muut.com/&quot;&gt;Muut&lt;/a&gt; and &lt;a href=&quot;https://www.discourse.org/&quot;&gt;Discourse&lt;/a&gt;. I found nothing to recommend Muut over Disqus. Discourse is open source, and comments are portable, but I would either have to host them myself or pay Discourse to host them for me. That’s their business model, and I don’t begrudge them that.&lt;/p&gt;

&lt;h2 id=&quot;html-comment-box&quot;&gt;HTML Comment Box&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.htmlcommentbox.com/&quot;&gt;HTML Comment Box&lt;/a&gt; is a service for hosting comments through an HTML (and JavaScript) widget. It’s very much like the above solutions except that it’s free, except possibly for “heavy users”. Comments are left “anonymously” (pseudonymously, really), with no e-mail address required. An HTML Comment Box would need to be included in each post. HTML Comment Box has several settings, and comments can be moderated using a Google account. The widget can be styled using CSS. In recent months a &lt;a href=&quot;https://labs.detectify.com/2017/01/18/stored-xss-ing-millions-of-sites-through-html-comment-box/&quot;&gt;vulnerability&lt;/a&gt; was discovered in HTML Comment Box, which the developer quickly patched when he was notified. I don’t consider myself an expert on security, but I don’t regard the discovery of the vulnerability as meaning that HTML Comment Box is necessarily less secure than other options. Indeed, the fact that the vulnerability was found so recently probably means that security is pretty high on the developer’s list of priorities right now. I commend the developer for his quick response.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pros:&lt;/strong&gt; Free to use, at least for low-bandwidth users. No logins required. No ads.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cons:&lt;/strong&gt; Comments controlled by a third party, although migration is allowed.&lt;/p&gt;

&lt;h2 id=&quot;remarkbox&quot;&gt;Remarkbox&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.remarkbox.com/&quot;&gt;Remarkbox&lt;/a&gt; is another service for hosting comments through an HTML/JavaScript widget. The author of Remarkbox uses Pelican, a Python static site generator. Remarkbox is free to use, but requires a monthly fee for the ability to moderate comments. Instead of choosing a display name, commenters are distinguished by a random series of alphanumeric characters, such as “6r2RkmmH”, generated from their e-mail address. After you post a comment, you receive a verification e-mail. If you don’t verify your e-mail, then your display name appears as “unverified”, rather than the random characters. Comments can be exported as JSON.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pros:&lt;/strong&gt; Free to use. No logins required. No ads.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cons:&lt;/strong&gt; Moderation is not free. Comments controlled by a third party, although exporting comments is allowed. Commenters can’t choose a display name.&lt;/p&gt;

&lt;h2 id=&quot;gotell&quot;&gt;GoTell&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/netlify/gotell&quot;&gt;GoTell&lt;/a&gt;, just recently renamed from “Netlify Comments”, is Netlify’s own solution for adding comments to a static site. Setting up GoTell is a bit more involved than the previous options. You need to clone the Netlify Comments starter template and push it to your GitHub account, then visit Netlify to integrate comment threads into your site. I’m not opposed to doing any of that. However, one section on the GoTell README page, titled “Setting up the API”, gave me pause, particularly the words: “You’ll need to run the API on a server.” If I understand this correctly, I would need to run GoTell on a separate server in order to integrate GoTell comments into my static site. If my understanding is correct, then I feel I might as well host my entire site on Heroku, Amazon AWS, etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pros:&lt;/strong&gt; Free to use. No logins required. No ads. Comments are controlled by the site owner.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cons:&lt;/strong&gt; Setup is a bit involved. Appears to require a separate host to process the comments.&lt;/p&gt;

&lt;h2 id=&quot;isso&quot;&gt;Isso&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://posativ.org/isso/&quot;&gt;Isso&lt;/a&gt; is a commenting server written in Python that stores comments in a SQLite database file. Users may choose a display name or use the default “Anonymous”. Name, e-mail address, and website URL are all optional; no login is required. Comments may be posted automatically or moderated according to the site owner’s preference. Unfortunately for my purposes, Isso requires configuring a server external to my static site.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pros:&lt;/strong&gt; Free to use. No logins required. No ads. Comments are controlled by the site owner.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cons:&lt;/strong&gt; Setup is a bit involved. Requires a separate host to store the comments.&lt;/p&gt;

&lt;h2 id=&quot;pelican-comment-system&quot;&gt;Pelican Comment System&lt;/h2&gt;

&lt;p&gt;The &lt;a href=&quot;https://bernhard.scheirle.de/posts/2014/March/29/static-comments-via-email/&quot;&gt;Pelican Comment System&lt;/a&gt; is specifically for use with the Pelican static site generator, which is written in Python. Choosing this solution would necessitate migrating my site from Jekyll to Pelican. The advantage of this particular solution is that it’s intended specifically for static sites. Comments are e-mailed to the site owner in markdown format. The site owner copies the e-mails to a directory, from which they are automatically incorporated in the site the next time it is built.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pros:&lt;/strong&gt; Free to use. No logins required. No ads. Comments are controlled by the site owner. Doesn’t require a separate host for storing or processing comments (if you don’t count e-mail servers).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cons:&lt;/strong&gt; Setup is a bit involved. Site owner must copy comments manually (or set up a process for automatically importing them from a mailbox to a particular folder).&lt;/p&gt;

&lt;h2 id=&quot;staticman&quot;&gt;Staticman&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://staticman.net/&quot;&gt;Staticman&lt;/a&gt; is another solution intended specifically for use with static sites. Staticman operates as a GitHub bot. The site owner must add Staticman (GitHub account: staticmanapp) as a collaborator to the site repository. When a user posts a comment, the comment is sent to the Staticman API web server, which passes the comment along to the Staticman GitHub account. If moderation is not enabled, Staticman automatically pushes the comment to the site repository. If moderation is enabled, Staticman submits a pull request, and the site owner can choose whether or not to merge the comment. Obviously, if moderation is enabled, comments will not be posted automatically, and when they appear on the site depends on the site owner. Recently Staticman has added support for reCAPTCHA. This should help cut down on spam comments, but reCAPTCHA doesn’t support all browsers. It does support the most recent versions of the most common browsers on the most common operating systems, so I’m not sure if it’s that big of a deal; however, using reCAPTCHA is another obstacle to posting comments.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pros:&lt;/strong&gt; Free to use. No logins required. No ads. Comments are controlled by the site owner. Choice between automatic posting and moderation. Doesn’t require a separate host for storing or processing comments (if you don’t count the Staticman API web server and GitHub).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cons:&lt;/strong&gt; Setup is a bit involved. Site owner must decide how to handle spam comments. May impact the time required to generate the site.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;The solutions that appeal to me most strongly are the self-hosted solutions and Staticman. For now I’ll go with Staticman. I will likely need to learn more about Git/GitHub and Jekyll/Liquid, and to refresh my memory of JavaScript, HTML, and CSS to use it effectively, but accomplishing things like that, and writing about them, is very much the purpose of this site.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Addendum:&lt;/strong&gt; I said I’d implement comments with this post, and I intend to do so soon, but I’ve run into some trouble with Jekyll not generating posts. I’ve looked into various reasons for this happening. I don’t think it’s related to the timestamp, and I’m pretty sure it’s not a browser cache issue, as I checked the directory where the new post should have been generated, and it wasn’t there. Strangely, the problem seems to be fixed now, but what bothers me is that I don’t know what I did to fix it. Maybe it was a time-related issue after all. Anyway, with that delay I’m just going to make this post and then implement comments afterwards, hopefully before the end of the week.&lt;/p&gt;

&lt;p&gt;
&lt;hr /&gt;
&lt;p /&gt;

&lt;!-- Comment form --&gt;
&lt;h3&gt;Post a comment:&lt;/h3&gt;
&lt;form method=&quot;POST&quot; action=&quot;https://api.staticman.net/v2/entry/anglus/idiologos/master/comments&quot;&gt;
  &lt;input name=&quot;options[redirect]&quot; type=&quot;hidden&quot; value=&quot;https://idiologos.netlify.com&quot; /&gt;
  &lt;input name=&quot;options[slug]&quot; type=&quot;hidden&quot; value=&quot;open-for-comments&quot; /&gt;
  &lt;div&gt;
    &lt;legend&gt;Name&lt;/legend&gt;
    &lt;input name=&quot;fields[name]&quot; type=&quot;text&quot; /&gt;
  &lt;/div&gt;
  &lt;div&gt;
    &lt;legend&gt;E-mail (optional)&lt;/legend&gt;
    &lt;input name=&quot;fields[email]&quot; type=&quot;email&quot; /&gt;
  &lt;/div&gt;
  &lt;div&gt;
    &lt;legend&gt;Comment&lt;/legend&gt;
    &lt;textarea style=&quot;width:70%&quot; name=&quot;fields[message]&quot; rows=&quot;12&quot;&gt;&lt;/textarea&gt;
  &lt;/div&gt;
  
  &lt;div&gt;
    &lt;button type=&quot;submit&quot;&gt;Submit Comment&lt;/button&gt;
  &lt;/div&gt;
&lt;/form&gt;

&lt;!-- Static comments --&gt;
&lt;!-- Partly based on Made Mistakes' comments.html file: --&gt;
&lt;!-- https://github.com/mmistakes/minimal-mistakes/blob/master/_includes/comments.html --&gt;
&lt;!-- Also partly based on Eduardo Boucas' reviews.html file --&gt;
&lt;!-- https://github.com/eduardoboucas/popcorn/blob/gh-pages/_includes/reviews.html --&gt;


&lt;p&gt;
&lt;hr /&gt;
&lt;p&gt;
	&lt;h3&gt;
      
        2
      
      Comments
    &lt;/h3&gt;
    

    
        &lt;legend&gt;&lt;strong&gt;Matthew Morris&lt;/strong&gt;&lt;legend&gt;
        &lt;p&gt;&lt;p&gt;This is a test.&lt;/p&gt;

		  &lt;em&gt;March 18, 2017 at 02:48 AM&lt;/em&gt;
		&lt;p&gt;
        &lt;br /&gt;
    
        &lt;legend&gt;&lt;strong&gt;Matthew Morris&lt;/strong&gt;&lt;legend&gt;
        &lt;p&gt;&lt;h2 id=&quot;markdown-test&quot;&gt;Markdown test&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;language-Python&quot;&gt;def fib(n):
    a, b = 0, 1
    while a &amp;lt; n:
        print(a, end=' ')
        a, b = b, a+b
    print()

fib(1000)
&lt;/code&gt;&lt;/pre&gt;

		  &lt;em&gt;March 18, 2017 at 03:21 AM&lt;/em&gt;
		&lt;p&gt;
        &lt;br /&gt;
    


&lt;/p&gt;&lt;/p&gt;&lt;/legend&gt;&lt;/legend&gt;&lt;/p&gt;&lt;/p&gt;&lt;/legend&gt;&lt;/legend&gt;&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;</content><author><name></name></author><category term="jekyll" /><category term="staticman" /><category term="comments" /><summary type="html">Just a quick note before I get started: It was still March 14 in my time zone when I wrote my previous post, when I generated the static pages using Jekyll, and when I pushed the changes to GitHub, but it seems Netlify’s infrastructure has its own idea of what time it is.</summary></entry><entry><title type="html">Technical Considerations</title><link href="http://localhost:4000/2017/03/14/technical-considerations.html" rel="alternate" type="text/html" title="Technical Considerations" /><published>2017-03-14T21:40:00-05:00</published><updated>2017-03-14T21:40:00-05:00</updated><id>http://localhost:4000/2017/03/14/technical-considerations</id><content type="html" xml:base="http://localhost:4000/2017/03/14/technical-considerations.html">&lt;p&gt;Happy Pi Day!&lt;/p&gt;

&lt;p&gt;I’ve been quiet lately for a few reasons, the most significant of which is that I’ve been focusing on completing the online course, &lt;a href=&quot;https://www.futurelearn.com/courses/functional-programming-erlang&quot;&gt;“Functional Programming in Erlang”&lt;/a&gt;, taught by Simon Thompson of the University of Kent, and hosted by FutureLearn. I may discuss that experience in a future post, but in this post I’d like to focus on my general plans for this web log.&lt;/p&gt;

&lt;p&gt;Another reason I’ve been quiet is that I’ve been considering what to do about comments, and haven’t had the time to implement them properly. I created this blog using Jekyll, a static site generator written in Ruby. A static site generator allows you to set a few configuration options, write posts in Markdown or some other non-HTML markup language, and maybe include a theme; and then, with a single command, it generates the HTML, CSS, and JavaScript for the site. There’s no database on the back end storing information, and no server-side programming language generating web pages on demand. Static web sites are good for speed and security, but not so great for interactivity. No database means no storage for login details and comments.&lt;/p&gt;

&lt;p&gt;So, I have about four options. The first is to stay with a static site generator such as Jekyll, and not allow comments. If anyone is interested enough to respond to one of my posts, they can send me an e-mail. This is the easiest option for me, as it doesn’t require me to change anything. However, again it’s not very good for interactivity. I sometimes post comments, but almost never send e-mails to bloggers.&lt;/p&gt;

&lt;p&gt;The second option is to add Disqus or other externally-hosted comments to the site. This option would probably be almost as easy as doing nothing, but I don’t like the idea of comments here being at the mercy of a third party.&lt;/p&gt;

&lt;p&gt;The third option would be to use one of various methods devised for adding comments to static sites. These tend to be rather hackish, often involving e-mails or GitHub behind the scenes, and usually not automatic–not that posting comments without intervening moderation is necessarily a good thing, from my point of view; but I do understand that having comments held in moderation for hours, or even days, can be discouraging. Nevertheless, for the time being, I am considering these options most seriously.&lt;/p&gt;

&lt;p&gt;The fourth option would be hosting my own comments offsite. However, I feel that kind of defeats the purpose of having a static site, and if I do decide to go for that option, I may as well host my entire blog on Heroku, AWS, or some other service for hosting dynamic sites and web applications.&lt;/p&gt;

&lt;p&gt;In addition to Jekyll, I am also considering Pelican (Python) and Obelisk (Elixir) to statically generate this blog. If I move to a dynamic site, I have numerous options, including Rails (Ruby), Sinatra (Ruby), Django (Python), Flask (Python), Phoenix (Elixir), Zotonic (Erlang), Nitrogen (Erlang), and N2O (Erlang). Of course, I would need to move this site from Netlify to another host, as Netlify only hosts static sites.&lt;/p&gt;

&lt;p&gt;Anyway, that’s where I’m at now. My goal this week is to implement comments. By the time my next post appears, I should have comments enabled, one way or another.&lt;/p&gt;

&lt;p&gt;
&lt;hr /&gt;
&lt;p /&gt;

&lt;!-- Comment form --&gt;
&lt;h3&gt;Post a comment:&lt;/h3&gt;
&lt;form method=&quot;POST&quot; action=&quot;https://api.staticman.net/v2/entry/anglus/idiologos/master/comments&quot;&gt;
  &lt;input name=&quot;options[redirect]&quot; type=&quot;hidden&quot; value=&quot;https://idiologos.netlify.com&quot; /&gt;
  &lt;input name=&quot;options[slug]&quot; type=&quot;hidden&quot; value=&quot;technical-considerations&quot; /&gt;
  &lt;div&gt;
    &lt;legend&gt;Name&lt;/legend&gt;
    &lt;input name=&quot;fields[name]&quot; type=&quot;text&quot; /&gt;
  &lt;/div&gt;
  &lt;div&gt;
    &lt;legend&gt;E-mail (optional)&lt;/legend&gt;
    &lt;input name=&quot;fields[email]&quot; type=&quot;email&quot; /&gt;
  &lt;/div&gt;
  &lt;div&gt;
    &lt;legend&gt;Comment&lt;/legend&gt;
    &lt;textarea style=&quot;width:70%&quot; name=&quot;fields[message]&quot; rows=&quot;12&quot;&gt;&lt;/textarea&gt;
  &lt;/div&gt;
  
  &lt;div&gt;
    &lt;button type=&quot;submit&quot;&gt;Submit Comment&lt;/button&gt;
  &lt;/div&gt;
&lt;/form&gt;

&lt;!-- Static comments --&gt;
&lt;!-- Partly based on Made Mistakes' comments.html file: --&gt;
&lt;!-- https://github.com/mmistakes/minimal-mistakes/blob/master/_includes/comments.html --&gt;
&lt;!-- Also partly based on Eduardo Boucas' reviews.html file --&gt;
&lt;!-- https://github.com/eduardoboucas/popcorn/blob/gh-pages/_includes/reviews.html --&gt;



&lt;/p&gt;</content><author><name></name></author><category term="jekyll" /><category term="pelican" /><category term="obelisk" /><category term="python" /><category term="ruby" /><category term="elixir" /><category term="erlang" /><category term="comments" /><summary type="html">Happy Pi Day!</summary></entry><entry><title type="html">Incipit Historia</title><link href="http://localhost:4000/2017/03/04/incipit-historia.html" rel="alternate" type="text/html" title="Incipit Historia" /><published>2017-03-04T16:49:39-06:00</published><updated>2017-03-04T16:49:39-06:00</updated><id>http://localhost:4000/2017/03/04/incipit-historia</id><content type="html" xml:base="http://localhost:4000/2017/03/04/incipit-historia.html">&lt;p&gt;As a child I loved to read, both fiction and non-fiction. My family had a set of encyclopedias, and I often turned to them to learn more about a particular subject, reading through an article, then finding related articles under the “See also:” section at the end, looking up a related article, and so on. I can spend hours in a library or bookstore.&lt;/p&gt;

&lt;p&gt;When I first learned about the Internet and the World Wide Web in the mid-1990s, I imagined them as a vast library. When I first logged on, I found it thrilling to visit web pages in other countries and realize that the content I was seeing was hosted on a computer far away, yet arrived on my screen almost instantly–or about as instantly as a 14.4 Kbps modem could manage. At that time there wasn’t much content, even compared with my local library. This was before Wikipedia, YouTube, Flickr, SoundCloud, and so on.&lt;/p&gt;

&lt;p&gt;As interested as I was in computers and the Internet, I ended up pursuing a different interest in college: language. At least, at that time the two subjects seemed to me to be quite separate. Since my graduation I have gradually come to notice how closely linguistics and computer science have been intertwined since at least the 1950s, and how they are becoming ever more intertwined in the present, as both linguists and computer scientists devote much research effort to the problem of natural language understanding.&lt;/p&gt;

&lt;p&gt;I have used open source software for almost 20 years without giving anything back. I have also learned much (or so I think!) about language and computer programming in my own personal quest to satisfy my curiosity about such subjects, and hopefully to make a living as well. But a lake without an outlet becomes a dead sea. My intention with this web log is to share what I’ve learned, or what I think, about certain subjects, particularly related to linguistics and computer programming. In some areas I may have a pretty solid grasp of the subject, but in many areas I will be posting as I learn.&lt;/p&gt;

&lt;p&gt;Just to whet your appetite (or alternatively, to warn you off), here are a few topics I’m currently interested in, ordered more or less by my grasp of them: etymology, onomastics, functional programming, logic programming, ontology, concurrent programming, graph databases and graph processors, and machine learning.&lt;/p&gt;

&lt;p&gt;
&lt;hr /&gt;
&lt;p /&gt;

&lt;!-- Comment form --&gt;
&lt;h3&gt;Post a comment:&lt;/h3&gt;
&lt;form method=&quot;POST&quot; action=&quot;https://api.staticman.net/v2/entry/anglus/idiologos/master/comments&quot;&gt;
  &lt;input name=&quot;options[redirect]&quot; type=&quot;hidden&quot; value=&quot;https://idiologos.netlify.com&quot; /&gt;
  &lt;input name=&quot;options[slug]&quot; type=&quot;hidden&quot; value=&quot;incipit-historia&quot; /&gt;
  &lt;div&gt;
    &lt;legend&gt;Name&lt;/legend&gt;
    &lt;input name=&quot;fields[name]&quot; type=&quot;text&quot; /&gt;
  &lt;/div&gt;
  &lt;div&gt;
    &lt;legend&gt;E-mail (optional)&lt;/legend&gt;
    &lt;input name=&quot;fields[email]&quot; type=&quot;email&quot; /&gt;
  &lt;/div&gt;
  &lt;div&gt;
    &lt;legend&gt;Comment&lt;/legend&gt;
    &lt;textarea style=&quot;width:70%&quot; name=&quot;fields[message]&quot; rows=&quot;12&quot;&gt;&lt;/textarea&gt;
  &lt;/div&gt;
  
  &lt;div&gt;
    &lt;button type=&quot;submit&quot;&gt;Submit Comment&lt;/button&gt;
  &lt;/div&gt;
&lt;/form&gt;

&lt;!-- Static comments --&gt;
&lt;!-- Partly based on Made Mistakes' comments.html file: --&gt;
&lt;!-- https://github.com/mmistakes/minimal-mistakes/blob/master/_includes/comments.html --&gt;
&lt;!-- Also partly based on Eduardo Boucas' reviews.html file --&gt;
&lt;!-- https://github.com/eduardoboucas/popcorn/blob/gh-pages/_includes/reviews.html --&gt;



&lt;/p&gt;</content><author><name></name></author><category term="Internet" /><category term="books" /><category term="knowledge" /><summary type="html">As a child I loved to read, both fiction and non-fiction. My family had a set of encyclopedias, and I often turned to them to learn more about a particular subject, reading through an article, then finding related articles under the “See also:” section at the end, looking up a related article, and so on. I can spend hours in a library or bookstore.</summary></entry></feed>